#!/usr/bin/env bash

sudo -v

GREEN='\e[38;2;11;249;163m'     # Green color
RED='\e[31m'                    # Red color
PURPLE='\033[38;2;180;130;255m' # Purple color
RESET='\e[0m'                   # Reset color

source src/setup/graphic_card.sh
source src/setup/packages.sh
source src/setup/peripheries.sh
source src/setup/shell.sh
source src/setup/software.sh
source src/setup/system_setup.sh

function install_aur_helper() {
    if ! command -v yay &> /dev/null; then
        echo "Installation de yay"
        git clone https://aur.archlinux.org/yay-bin.git >> /dev/null 2>&1
        cd yay-bin || exit
        echo "|- Compilation de yay"
        makepkg -si --noconfirm >> /dev/null 2>&1
        cd .. || exit
        rm -rf yay-bin >> /dev/null 2>&1
        echo "--------------------------------------------------"
    fi
}

function welcome_msg() {
    clear
    echo -e "${GREEN}Bienvenue dans le script post-installation d'Arch Linux !${RESET}"
    echo -e "-----------------------------------------------------------------------------------------------------------

       ${PURPLE}%%%%%%%%%%${RESET}  ${GREEN}*********${RESET}            
       ${PURPLE}%%%${RESET}                 ${GREEN}******${RESET}       
       ${PURPLE}%%%${RESET}                     ${GREEN}***${RESET}      Script post-installation Arch Linux
       ${PURPLE}%%%${RESET}                     ${GREEN}***${RESET}      
       ${PURPLE}%%%${RESET}                     ${GREEN}***${RESET}      GitHub : https://github.com/Cardiacman13/Tuto-Arch
       ${PURPLE}%%%${RESET}                     ${GREEN}***${RESET}      
       ${PURPLE}%%%${RESET}                     ${GREEN}***${RESET}      Par https://github.com/Cardiacman13
        ${PURPLE}%%%%%%${RESET}                 ${GREEN}***${RESET}       et https://github.com/wmemcpy
             ${PURPLE}%%%%%%%%${RESET}  ${GREEN}***********${RESET}     

-----------------------------------------------------------------------------------------------------------\n"
    sleep 1
    echo -e "${RED}Ce script va effectuer des modifications sur votre système.${RESET}"
    echo -e "Certaines étapes peuvent prendre du temps en fonction de votre connexion internet et de votre CPU.\nAppuyez sur ${GREEN}Entrée${RESET} pour continuer ou ${GREEN}Ctrl+C${RESET} pour annuler."
    read -p "" choice
    if [[ $choice != "" ]]; then
        exit 0
    fi
}

function main() {
    local start_time=$(date +%s)
    welcome_msg

    if grep -q "^#\[multilib\]" "/etc/pacman.conf"; then
        sudo sed -i '/^#\[multilib\]/,/^#Include = \/etc\/pacman.d\/mirrorlist/ s/^#//' "/etc/pacman.conf"
    fi

    echo -e "|- Mise à jour des mirroirs. ${RED}(long)${RESET}"
    sudo pacman -Syy --noconfirm >> /dev/null 2>&1
    sudo pacman -S --needed --noconfirm reflector >> /dev/null 2>&1
    sudo reflector --latest 20 --protocol https --sort rate --fastest 20 --save /etc/pacman.d/mirrorlist >> /dev/null 2>&1
    sudo pacman -S --needed --noconfirm git >> /dev/null 2>&1
    install_aur_helper
    yay -S --needed --noconfirm bc >> /dev/null 2>&1

    system_setup            # 1
    install_video_drivers   # 2
    chose_shell             # 3
    install_peripheries     # 4
    install_useful_packages # 5
    install_useful_software # 6

    sudo pacman -Rs --noconfirm bc >> /dev/null 2>&1

    local end_time=$(date +%s)
    local duration=$((end_time - start_time))

    echo -e "${GREEN}Le script à mis ${duration} secondes à s'exécuter.${RESET}"
    sleep 1
    TMP=10
    echo -e "${RED}Le système redémarre dans ${TMP} secondes ou appuyez sur Ctrl+C pour annuler.${RESET}"
    while [[ $TMP -gt 0 ]]; do
        echo -e "${RED}Redémarrage dans ${TMP} secondes...${RESET}"
        sleep 1
        ((TMP--))
    done
    sudo reboot
}

main
