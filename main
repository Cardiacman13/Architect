#!/usr/bin/env bash

sudo -v

source src/setup/graphic_card.sh
source src/setup/packages.sh
source src/setup/peripheries.sh
source src/setup/shell.sh
source src/setup/software.sh
source src/setup/system_setup.sh

function display_progress() {
    local total_tasks=$1
    local completed_tasks=$2
    local start_time=$3

    local current_time=$(date +%s.%N)
    local elapsed_time=$(echo "$current_time - $start_time" | bc)
    local minutes=$(echo "scale=0; $elapsed_time / 60" | bc)
    local seconds=$(echo "scale=0; $elapsed_time % 60" | bc)
    
    local progress=$(echo "scale=0; ($completed_tasks * 100) / $total_tasks" | bc)
    local terminal_width=$(tput cols)
    local bar_length=$(echo "$terminal_width - 20" | bc)
    
    local completed_bar_length=$(echo "scale=0; ($progress * $bar_length) / 100" | bc)
    local uncompleted_bar_length=$(echo "$bar_length - $completed_bar_length" | bc)
    
    local completed_bar=$(printf "%0.s#" $(seq 1 $completed_bar_length))
    local uncompleted_bar=$(printf "%0.s-" $(seq 1 $uncompleted_bar_length))
    
    local green='\e[32m' # Green color
    local red='\e[31m'   # Red color
    local reset='\e[0m'  # Reset color
    
    # clear
    echo -e "Progress: $completed_tasks/$total_tasks tasks completed."
    echo -e "$[{green}$completed_bar${red}$uncompleted_bar${reset}] $progress% completed."
    echo -e "Elapsed Time: $minutes minutes $seconds seconds."
}

function desktop_environment_management() {
    local de=""
    if [ "$XDG_CURRENT_DESKTOP" ]; then
        de=$XDG_CURRENT_DESKTOP
    elif [ "$GDMSESSION" ]; then
        de=$GDMSESSION
    elif [ "$DESKTOP_SESSION" ]; then
        de=$DESKTOP_SESSION
    fi

    # execute la fonction de gestion du DE si elle existe
    if [ "$de" ]; then
        if [ -f src/setup/desktop_environments/$de.sh ]; then
            source src/setup/desktop_environments/$de.sh
        fi
    fi
}

function install_aur_helper() {
    if ! command -v yay &> /dev/null; then
        git clone https://aur.archlinux.org/yay-bin.git
        cd yay-bin
        makepkg -si --noconfirm
        cd ..
        rm -rf yay-bin
    fi
}

function main() {
    local start_time=$(date +%s.%N) 
    local total_tasks=6
    local completed_tasks=0

    if grep -q "^#\[multilib\]" "/etc/pacman.conf"; then
        sudo sed -i '/^#\[multilib\]/,/^#Include = \/etc\/pacman.d\/mirrorlist/ s/^#//' "/etc/pacman.conf"
    fi
    sudo pacman -Syy --noconfirm
    sudo pacman -S --noconfirm git
    install_aur_helper
    yay -S --needed --noconfirm bc lolcat

    display_progress $total_tasks $completed_tasks $start_time
    system_setup            # 1
    ((completed_tasks++))
    display_progress $total_tasks $completed_tasks $start_time
    nvidia_drivers
    # install_video_drivers   # 2
    ((completed_tasks++))
    display_progress $total_tasks $completed_tasks $start_time
    chose_shell             # 3
    ((completed_tasks++))
    display_progress $total_tasks $completed_tasks $start_time
    install_peripheries     # 4
    ((completed_tasks++))
    display_progress $total_tasks $completed_tasks $start_time
    install_useful_packages # 5
    ((completed_tasks++))
    display_progress $total_tasks $completed_tasks $start_time
    install_useful_software # 6
    ((completed_tasks++))
    display_progress $total_tasks $completed_tasks $start_time

    sudo pacman -Rs --noconfirm bc lolcat
}

main

